package com.example.weatherforecastcompose.presentation.ui.theme

import androidx.compose.ui.graphics.Color

val primaryLight = Color(0xFF607D8B)      // Blue Grey
val onPrimaryLight = Color(0xFFE0E0E0)
val primaryContainerLight = Color(0xFFFFFFFF)  // Light Blue Grey Color(0xFFCFD8DC)
val onPrimaryContainerLight = Color(0xFF37474F) // Dark Blue Grey
val secondaryLight = Color(0xFF9E9E9E)    // Grey
val onSecondaryLight = Color.White
val secondaryContainerLight = Color(0xFFE0E0E0)  // Light Grey
val onSecondaryContainerLight = Color(0xFF616161) // Dark Grey
val tertiaryLight = Color(0xFFFFC107)     // Amber
val onTertiaryLight = Color.Black
val tertiaryContainerLight = Color(0xFFFFF59D)  // Light Amber
val onTertiaryContainerLight = Color(0xFFA08329) // Dark Amber
val errorLight = Color(0xFFE53935)        // Soft Red
val onErrorLight = Color.White
val errorContainerLight = Color(0xFFFFCDD2)     // Light Red
val onErrorContainerLight = Color(0xFFB71C1C)   // Dark Red
val backgroundLight = Color(0xFFF5F5F5)    // Soft Grey
val onBackgroundLight = Color.Black
val surfaceLight = Color.White
val onSurfaceLight = Color.Black
val surfaceVariantLight = Color(0xFFE0E0E0) // Grey
val onSurfaceVariantLight = Color.Black
val outlineLight = Color(0xFFBDBDBD)       // Soft Grey
val outlineVariantLight = Color(0xFFE0E0E0) // Light Grey
val scrimLight = Color(0x99000000)         // Semi-transparent Black
val inverseSurfaceLight = Color(0xFF212121) // Dark Grey
val inverseOnSurfaceLight = Color.White
val inversePrimaryLight = Color(0xFF1976D2) // Soft Blue
val surfaceDimLight = Color(0xFFE0E0E0)    // Grey
val surfaceBrightLight = Color.White
val surfaceContainerLowestLight = Color.White
val surfaceContainerLowLight = Color(0xFFFAFAFA) // Light Grey
val surfaceContainerLight = Color(0xFFF5F5F5)   // Grey
val surfaceContainerHighLight = Color(0xFFE0E0E0) // Dark Grey
val surfaceContainerHighestLight = Color(0xFFD7CCC8) // Light Brown








val primaryLightMediumContrast = Color(0xFF00476A)
val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
val primaryContainerLightMediumContrast = Color(0xFF417AA1)
val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
val secondaryLightMediumContrast = Color(0xFF344552)
val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
val secondaryContainerLightMediumContrast = Color(0xFF667785)
val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
val tertiaryLightMediumContrast = Color(0xFF493D5E)
val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
val tertiaryContainerLightMediumContrast = Color(0xFF7B6E92)
val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
val errorLightMediumContrast = Color(0xFF8C0009)
val onErrorLightMediumContrast = Color(0xFFFFFFFF)
val errorContainerLightMediumContrast = Color(0xFFDA342E)
val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
val backgroundLightMediumContrast = Color(0xFFF7F9FF)
val onBackgroundLightMediumContrast = Color(0xFF181C20)
val surfaceLightMediumContrast = Color(0xFFF7F9FF)
val onSurfaceLightMediumContrast = Color(0xFF181C20)
val surfaceVariantLightMediumContrast = Color(0xFFDDE3EA)
val onSurfaceVariantLightMediumContrast = Color(0xFF3D4349)
val outlineLightMediumContrast = Color(0xFF5A6066)
val outlineVariantLightMediumContrast = Color(0xFF757B82)
val scrimLightMediumContrast = Color(0xFF000000)
val inverseSurfaceLightMediumContrast = Color(0xFF2D3135)
val inverseOnSurfaceLightMediumContrast = Color(0xFFEEF1F6)
val inversePrimaryLightMediumContrast = Color(0xFF96CDF8)
val surfaceDimLightMediumContrast = Color(0xFFD7DADF)
val surfaceBrightLightMediumContrast = Color(0xFFF7F9FF)
val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
val surfaceContainerLowLightMediumContrast = Color(0xFFF1F4F9)
val surfaceContainerLightMediumContrast = Color(0xFFEBEEF3)
val surfaceContainerHighLightMediumContrast = Color(0xFFE5E8ED)
val surfaceContainerHighestLightMediumContrast = Color(0xFFE0E3E8)

val primaryLightHighContrast = Color(0xFF002539)
val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
val primaryContainerLightHighContrast = Color(0xFF00476A)
val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
val secondaryLightHighContrast = Color(0xFF132430)
val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
val secondaryContainerLightHighContrast = Color(0xFF344552)
val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
val tertiaryLightHighContrast = Color(0xFF271D3B)
val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
val tertiaryContainerLightHighContrast = Color(0xFF493D5E)
val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
val errorLightHighContrast = Color(0xFF4E0002)
val onErrorLightHighContrast = Color(0xFFFFFFFF)
val errorContainerLightHighContrast = Color(0xFF8C0009)
val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
val backgroundLightHighContrast = Color(0xFFF7F9FF)
val onBackgroundLightHighContrast = Color(0xFF181C20)
val surfaceLightHighContrast = Color(0xFFF7F9FF)
val onSurfaceLightHighContrast = Color(0xFF000000)
val surfaceVariantLightHighContrast = Color(0xFFDDE3EA)
val onSurfaceVariantLightHighContrast = Color(0xFF1F252A)
val outlineLightHighContrast = Color(0xFF3D4349)
val outlineVariantLightHighContrast = Color(0xFF3D4349)
val scrimLightHighContrast = Color(0xFF000000)
val inverseSurfaceLightHighContrast = Color(0xFF2D3135)
val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
val inversePrimaryLightHighContrast = Color(0xFFDDEEFF)
val surfaceDimLightHighContrast = Color(0xFFD7DADF)
val surfaceBrightLightHighContrast = Color(0xFFF7F9FF)
val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
val surfaceContainerLowLightHighContrast = Color(0xFFF1F4F9)
val surfaceContainerLightHighContrast = Color(0xFFEBEEF3)
val surfaceContainerHighLightHighContrast = Color(0xFFE5E8ED)
val surfaceContainerHighestLightHighContrast = Color(0xFFE0E3E8)

val primaryDark =Color.White
val onPrimaryDark = Color(0xFF455A64)
val primaryContainerDark = Color(0xFF90A4AE) // Blue Grey
val onPrimaryContainerDark = Color(0xFF263238) // Dark Blue Grey
val secondaryDark = Color(0xFF757575)       // Grey
val onSecondaryDark = Color.White
val secondaryContainerDark = Color(0xFFB0BEC5) // Blue Grey
val onSecondaryContainerDark = Color(0xFF424242) // Dark Grey
val tertiaryDark = Color(0xFFFFA000)        // Orange
val onTertiaryDark = Color.Black
val tertiaryContainerDark = Color(0xFFFFE082) // Light Orange
val onTertiaryContainerDark = Color(0xFFA75A00) // Dark Orange
val errorDark = Color(0xFFB71C1C)           // Red
val onErrorDark = Color.White
val errorContainerDark = Color(0xFFEF9A9A)  // Light Red
val onErrorContainerDark = Color(0xFF7F0000) // Dark Red
val backgroundDark = Color(0xFF263238)      // Dark Blue Grey
val onBackgroundDark = Color.White
val surfaceDark = Color(0xFF37474F)         // Blue Grey
val onSurfaceDark = Color.White
val surfaceVariantDark = Color(0xFF455A64)  // Dark Blue Grey
val onSurfaceVariantDark = Color.White
val outlineDark = Color(0xFF90A4AE)         // Blue Grey
val outlineVariantDark = Color(0xFF607D8B)  // Grey Blue
val scrimDark = Color(0x99000000)           // Semi-transparent Black
val inverseSurfaceDark = Color(0xFFE0E0E0)  // Light Grey
val inverseOnSurfaceDark = Color.Black
val inversePrimaryDark = Color(0xFF2196F3)  // Soft Blue
val surfaceDimDark = Color(0xFF37474F)      // Blue Grey
val surfaceBrightDark = Color.Black
val surfaceContainerLowestDark = Color.Black
val surfaceContainerLowDark = Color(0xFF212121) // Dark Grey
val surfaceContainerDark = Color(0xFF263238)  // Dark Blue Grey
val surfaceContainerHighDark = Color(0xFF455A64) // Grey Blue
val surfaceContainerHighestDark = Color(0xFF4E342E) // Brown






val primaryDarkMediumContrast = Color(0xFF9AD1FC)
val onPrimaryDarkMediumContrast = Color(0xFF001828)
val primaryContainerDarkMediumContrast = Color(0xFF5F96BF)
val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
val secondaryDarkMediumContrast = Color(0xFFBCCDDD)
val onSecondaryDarkMediumContrast = Color(0xFF061824)
val secondaryContainerDarkMediumContrast = Color(0xFF8293A2)
val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
val tertiaryDarkMediumContrast = Color(0xFFD3C4EC)
val onTertiaryDarkMediumContrast = Color(0xFF1B102F)
val tertiaryContainerDarkMediumContrast = Color(0xFF988AB0)
val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
val errorDarkMediumContrast = Color(0xFFFFBAB1)
val onErrorDarkMediumContrast = Color(0xFF370001)
val errorContainerDarkMediumContrast = Color(0xFFFF5449)
val onErrorContainerDarkMediumContrast = Color(0xFF000000)
val backgroundDarkMediumContrast = Color(0xFF101417)
val onBackgroundDarkMediumContrast = Color(0xFFE0E3E8)
val surfaceDarkMediumContrast = Color(0xFF101417)
val onSurfaceDarkMediumContrast = Color(0xFFF9FBFF)
val surfaceVariantDarkMediumContrast = Color(0xFF41474D)
val onSurfaceVariantDarkMediumContrast = Color(0xFFC5CBD2)
val outlineDarkMediumContrast = Color(0xFF9EA3AA)
val outlineVariantDarkMediumContrast = Color(0xFF7E848A)
val scrimDarkMediumContrast = Color(0xFF000000)
val inverseSurfaceDarkMediumContrast = Color(0xFFE0E3E8)
val inverseOnSurfaceDarkMediumContrast = Color(0xFF262A2E)
val inversePrimaryDarkMediumContrast = Color(0xFF004D71)
val surfaceDimDarkMediumContrast = Color(0xFF101417)
val surfaceBrightDarkMediumContrast = Color(0xFF363A3E)
val surfaceContainerLowestDarkMediumContrast = Color(0xFF0B0F12)
val surfaceContainerLowDarkMediumContrast = Color(0xFF181C20)
val surfaceContainerDarkMediumContrast = Color(0xFF1C2024)
val surfaceContainerHighDarkMediumContrast = Color(0xFF262A2E)
val surfaceContainerHighestDarkMediumContrast = Color(0xFF313539)

val primaryDarkHighContrast = Color(0xFFF9FBFF)
val onPrimaryDarkHighContrast = Color(0xFF000000)
val primaryContainerDarkHighContrast = Color(0xFF9AD1FC)
val onPrimaryContainerDarkHighContrast = Color(0xFF000000)
val secondaryDarkHighContrast = Color(0xFFF9FBFF)
val onSecondaryDarkHighContrast = Color(0xFF000000)
val secondaryContainerDarkHighContrast = Color(0xFFBCCDDD)
val onSecondaryContainerDarkHighContrast = Color(0xFF000000)
val tertiaryDarkHighContrast = Color(0xFFFFF9FE)
val onTertiaryDarkHighContrast = Color(0xFF000000)
val tertiaryContainerDarkHighContrast = Color(0xFFD3C4EC)
val onTertiaryContainerDarkHighContrast = Color(0xFF000000)
val errorDarkHighContrast = Color(0xFFFFF9F9)
val onErrorDarkHighContrast = Color(0xFF000000)
val errorContainerDarkHighContrast = Color(0xFFFFBAB1)
val onErrorContainerDarkHighContrast = Color(0xFF000000)
val backgroundDarkHighContrast = Color(0xFF101417)
val onBackgroundDarkHighContrast = Color(0xFFE0E3E8)
val surfaceDarkHighContrast = Color(0xFF101417)
val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
val surfaceVariantDarkHighContrast = Color(0xFF41474D)
val onSurfaceVariantDarkHighContrast = Color(0xFFF9FBFF)
val outlineDarkHighContrast = Color(0xFFC5CBD2)
val outlineVariantDarkHighContrast = Color(0xFFC5CBD2)
val scrimDarkHighContrast = Color(0xFF000000)
val inverseSurfaceDarkHighContrast = Color(0xFFE0E3E8)
val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
val inversePrimaryDarkHighContrast = Color(0xFF002D45)
val surfaceDimDarkHighContrast = Color(0xFF101417)
val surfaceBrightDarkHighContrast = Color(0xFF363A3E)
val surfaceContainerLowestDarkHighContrast = Color(0xFF0B0F12)
val surfaceContainerLowDarkHighContrast = Color(0xFF181C20)
val surfaceContainerDarkHighContrast = Color(0xFF1C2024)
val surfaceContainerHighDarkHighContrast = Color(0xFF262A2E)
val surfaceContainerHighestDarkHighContrast = Color(0xFF313539)

